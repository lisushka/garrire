location ~ .*\.php {
  root $root;

  # Regex to split $uri to $fastcgi_script_name and $fastcgi_path_info
  fastcgi_split_path_info ^(.+\.php)\?(/.+)$;

  # Check that the PHP script exists before passing it
  try_files $fastcgi_script_name =404;

  # Bypass the fact that try_files resets $fastcgi_path_info
  # see: http://trac.nginx.org/nginx/ticket/321
  set $path_info $fastcgi_path_info;
  fastcgi_param PATH_INFO $path_info;

  include fastcgi.conf;
  fastcgi_pass fpmpool;
}

location /static/ {
  root $root;
}

# Help is pre-generated and not context-dependent
location ~ ^/command/help$ { return 302 /static/help.txt; }
location ~ ^/command/help/(\w+)$ { return 302 /static/help/$1.txt; }

location /command/ {
  # That prevents us calling ourselves, but also other
  # bots calling us, which may or may not be desirable
  if ($http_accord_author_type = "bot") { return 404; }
  if ($http_accord_user_type = "bot") { return 404; }

  # Static files existing wouldn't be picked up anyway
  # as the method won't be a GET, so rewrite outright
  rewrite . /app/index.php last;
}

# Sets the presence. Because this only happens on Accord
# boot, it's much rarer now than it was prior. Will need
# to figure out how to set presence at runtime... # TODO
location = /discord/connecting {
  rewrite . /app/index.php last;
}

# For efficiency, to avoid nginx looking for a file
# if it's not explicitely handled above
location / {
  return 404;
}
